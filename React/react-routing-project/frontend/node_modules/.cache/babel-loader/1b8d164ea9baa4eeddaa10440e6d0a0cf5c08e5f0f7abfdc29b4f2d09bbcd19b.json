{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u0435\\u043D \\u043F\\u043B\\u043E\\u0442\\\\softuni\\\\udemy\\\\React\\\\react-routing-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as EventsLoader } from \"./pages/Events\";\nimport EventDetailPage, { loader as EventDetailsLoader } from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/Edit\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this),\n      loader: EventsLoader\n    }, {\n      path: \":id\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this),\n      loader: EventDetailsLoader\n    }, {\n      path: \"newEvent\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \":id/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","loader","EventsLoader","EventDetailPage","EventDetailsLoader","NewEventPage","EditEventPage","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","App","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Работен плот/softuni/udemy/React/react-routing-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as EventsLoader } from \"./pages/Events\";\nimport EventDetailPage, {\n  loader as EventDetailsLoader,\n} from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/Edit\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { path: \"/\", element: <HomePage /> },\n      {\n        path: \"/events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            path: \"\",\n            element: <EventsPage />,\n            loader: EventsLoader,\n          },\n          {\n            path: \":id\",\n            element: <EventDetailPage />,\n            loader: EventDetailsLoader,\n          },\n          { path: \"newEvent\", element: <NewEventPage /> },\n          { path: \":id/edit\", element: <EditEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,eAAe,IACpBF,MAAM,IAAIG,kBAAkB,QACvB,qBAAqB;AAC5B,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,cAAc;AACxC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGf,mBAAmB,CAAC,CACjC;EACEgB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACZ,UAAU;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IAAEP,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACX,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACpC;IACEL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BE,QAAQ,EAAE,CACR;MACEP,IAAI,EAAE,EAAE;MACRC,OAAO,eAAEH,OAAA,CAACV,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBhB,MAAM,EAAEC;IACV,CAAC,EACD;MACEU,IAAI,EAAE,KAAK;MACXC,OAAO,eAAEH,OAAA,CAACP,eAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC5BhB,MAAM,EAAEG;IACV,CAAC,EACD;MAAEQ,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACL,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC/C;MAAEL,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACJ,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEpD,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}